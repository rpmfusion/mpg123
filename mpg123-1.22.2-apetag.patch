diff -up mpg123-1.22.2/src/libmpg123/parse.c.apetag mpg123-1.22.2/src/libmpg123/parse.c
--- mpg123-1.22.2/src/libmpg123/parse.c.apetag	2015-05-24 14:50:24.000000000 +0200
+++ mpg123-1.22.2/src/libmpg123/parse.c	2015-06-22 09:39:00.904835586 +0200
@@ -1077,6 +1077,44 @@ static int handle_id3v2(mpg123_handle *f
 	return PARSE_AGAIN;
 }
 
+static int handle_apetag(mpg123_handle *fr, unsigned long newhead)
+{
+	unsigned char apebuf[28];
+	unsigned long val;
+	int i, ret;
+
+	fr->oldhead = 0;
+
+	/* Apetag headers are 32 bytes, newhead contains 4, read the rest */
+	if((ret=fr->rd->fullread(fr,apebuf,28)) < 0) return ret;
+
+	/* Apetags start with "APETAGEX", "APET" is already tested. */
+	if(strncmp((char *)apebuf,"AGEX",4) != 0)
+		goto apetag_bad;
+
+	/* Version must be 2.000 / 2000 */
+	val = (apebuf[7]<<24)|(apebuf[6]<<16)|(apebuf[5]<<8)|apebuf[4];
+	if(val != 2000)
+		goto apetag_bad;
+
+	/* Last 8 bytes must be 0 */
+	for(i=20; i<28; i++)
+		if(apebuf[i])
+			goto apetag_bad;
+
+	/* Looks good, skip the rest. */
+	val = (apebuf[11]<<24)|(apebuf[10]<<16)|(apebuf[9]<<8)|apebuf[8];
+	if((ret=fr->rd->skip_bytes(fr,val)) < 0) return ret;
+
+	return PARSE_AGAIN;
+
+apetag_bad:	
+	if(fr->rd->back_bytes(fr,31) < 0 && NOQUIET)
+		error("Cannot seek 31 bytes back!");
+
+	return PARSE_AGAIN; /* Give the resync code a chance to fix things */
+}
+
 /* Advance a byte in stream to get next possible header and forget 
    buffered data if possible (for feed reader). */
 #define FORGET_INTERVAL 1024 /* Used by callers to set forget flag each <n> bytes. */
@@ -1202,6 +1240,11 @@ static int wetwork(mpg123_handle *fr, un
 	{
 		return handle_id3v2(fr, newhead);
 	}
+	/* Check for an apetag header */
+	if(newhead == ('A'<<24)+('P'<<16)+('E'<<8)+'T')
+	{
+		return handle_apetag(fr, newhead);
+	}
 	else if(NOQUIET && fr->silent_resync == 0)
 	{
 		fprintf(stderr,"Note: Illegal Audio-MPEG-Header 0x%08lx at offset %"OFF_P".\n",
